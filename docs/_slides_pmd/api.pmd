---
---

```{python, echo = False}
import requests
import pandas as pd
```

## REST API

The US Census Burea provides access to its vast stores of demographic
data via their API at <https://api.census.gov>.

===

The **I** in **API** is the all the buttons and dials on a black box,
it's the same **I** that's in **GUI**. Instead of interfacing with a
user, those buttons and dials are meant for another software
application.

In the case of the Census, the main component of the application is
some relational database management system. There probabably are
several **GUI**s designed for humans to query the Census database; the
Census API is meant for communication between your program
(i.e. script) and their application.
{:.notes}

===

In a RESTful web service, the already universal system for
transferring data over the internet, known as HTTP is half of the
interface. All you really need is documentation for how to construct
the URL in a standards compliant way that the service will accept.

<https://api.census.gov/data/2015/acs5?get=NAME,AIANHH&for=county&in=state:24#irrelevant>

===

| Section           | Description                                                             |
| `https://`        | **scheme**                                                              |
| `api.census.gov`  | **authority**, or simply host if there's no user authentication         |
| `/data/2015/acs5` | **path** to a resource within a hierarchy                               |
| `?`               | beginning of the **query** component of a URL                           |
| `get=NAME,AIANHH` | first query parameter                                                   |
| `&`               | query parameter separator                                               |
| `for=county`      | second query parameter                                                  |
| `&`               | query parameter separator                                               |
| `in=state:*`      | third query parameter                                                   |
| `#`               | beginning of the **fragment** component of a URL                        |
| `irrelevant`      | the fragment is a client side pointer, it isn't even sent to the server |

===

```python
path = 'https://api.census.gov/data/2015/acs5'
query = {
  'get': 'NAME,AIANHH',
  'for': 'county',
  'in': 'state:24',
}
response = requests.get(path, params=query)
response
```

## Interpretting the response

The response from the API is a bunch of `0`s and `1`s, but part of the
HTTP protocol is to include a "header" with information about reading the body.

Most REST APIs return in the "body":

- Javascript Object Notation (JSON)
  - a UTF-8 encoded string of key-value pairs, where values may be lists
  - e.g. `{'a':24, 'b': ['x', 'y', 'z']}`
- eXtensible Markup Language (XML)
  - hierarchy of `<tag></tag>`s that do the same thing

===

The header states the content type in the reply is JSON.

```python
for k, v in response.headers.items():
    print('{}: {}'.format(k, v))
```

===

```python
data = pd.read_json(response.content)
data
```

===

## API Keys & Limits

Most servers request good behavior, others enforce it.

- Size of single query
- Rate of queries (calls per second, or per day)
- User credentials specified by an API key

## From the Census Bureau

>[**What Are the Query Limits?**](https://www.census.gov/data/developers/guidance/api-user-guide.Query_Components.html)
>
>You can include up to 50 variables in a single API query and can make up to 500 queries per IP address per day...
>
>Please keep in mind that all queries from a business or organization having multiple employees might employ a proxy service or firewall. This will make all of the users of that business or organization appear to have the same IP address.
